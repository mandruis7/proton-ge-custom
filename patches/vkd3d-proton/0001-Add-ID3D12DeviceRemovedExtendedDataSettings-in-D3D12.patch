From 137d159898e4ef310858142f66403740a5c8f2a3 Mon Sep 17 00:00:00 2001
From: James Puleo <james@jame.xyz>
Date: Wed, 19 Apr 2023 14:50:58 -0400
Subject: [PATCH] Add `ID3D12DeviceRemovedExtendedDataSettings` in
 D3D12GetDebugInterface

This patch is awful, and obviously shouldn't be taken upstream in this
state.
---
 include/vkd3d_d3d12.idl | 13 +++++++++
 libs/d3d12core/main.c   | 60 +++++++++++++++++++++++++++++++++++++++++
 2 files changed, 73 insertions(+)

diff --git a/include/vkd3d_d3d12.idl b/include/vkd3d_d3d12.idl
index 49924b7b..f10568dc 100644
--- a/include/vkd3d_d3d12.idl
+++ b/include/vkd3d_d3d12.idl
@@ -4357,3 +4357,16 @@ typedef HRESULT (__stdcall *PFN_D3D12_ENABLE_EXPERIMENTAL_FEATURES)(UINT num_fea
 typedef HRESULT (__stdcall *PFN_D3D12_GET_INTERFACE)(REFCLSID clsid, REFIID iid, void **debug);
 
 [local] HRESULT __stdcall D3D12GetInterface(REFCLSID clsid, REFIID iid, void **debug);
+
+[
+    uuid(82bc481c-6b9b-4030-aedb-7ee3d1df1e63),
+    object,
+    local,
+    pointer_default(unique)
+]
+interface ID3D12DeviceRemovedExtendedDataSettings : IUnknown
+{
+    void SetAutoBreadcrumbsEnablement(D3D12_DRED_ENABLEMENT enablement);
+    void SetPageFaultEnablement(D3D12_DRED_ENABLEMENT enablement);
+    void SetWatsonDumpEnablement(D3D12_DRED_ENABLEMENT enablement);
+}
\ No newline at end of file
diff --git a/libs/d3d12core/main.c b/libs/d3d12core/main.c
index c4d6c48e..88374188 100644
--- a/libs/d3d12core/main.c
+++ b/libs/d3d12core/main.c
@@ -367,11 +367,71 @@ HRESULT STDMETHODCALLTYPE d3d12core_SerializeVersionedRootSignature(d3d12core_in
     return vkd3d_serialize_versioned_root_signature(desc, blob, error_blob);
 }
 
+static HRESULT STDMETHODCALLTYPE d3d12_device_removed_extended_data_settings_QueryInterface(
+    ID3D12Debug *iface, REFIID riid, void **object)
+{
+    WARN("ID3D12DeviceRemovedExtendedDataSettings::QueryInterface(%s) STUB! Returning E_NOINTERFACE.\n", debugstr_guid(riid));
+
+    *object = NULL;
+    return E_NOINTERFACE;
+}
+
+static ULONG STDMETHODCALLTYPE d3d12_device_removed_extended_data_settings_AddRef(ID3D12Debug *iface)
+{
+    WARN("ID3D12DeviceRemovedExtendedDataSettings::AddRef STUB! Returning 1\n");
+
+    return 1;
+}
+
+static ULONG STDMETHODCALLTYPE d3d12_device_removed_extended_data_settings_Release(ID3D12Debug *iface)
+{
+    WARN("ID3D12DeviceRemovedExtendedDataSettings::Release STUB! Returning 1\n");
+
+    return 1;
+}
+
+static void STDMETHODCALLTYPE d3d12_device_removed_extended_data_settings_SetAutoBreadcrumbsEnablement(ID3D12Debug *iface, int value)
+{
+    WARN("ID3D12DeviceRemovedExtendedDataSettings::SetAutoBreadcrumbsEnablement(%d) STUB!\n", value);
+}
+
+static void STDMETHODCALLTYPE d3d12_device_removed_extended_data_settings_SetPageFaultEnablement(ID3D12Debug *iface, int value)
+{
+    WARN("ID3D12DeviceRemovedExtendedDataSettings::SetPageFaultEnablement(%d) STUB!\n", value);
+}
+
+static void STDMETHODCALLTYPE d3d12_device_removed_extended_data_settings_SetWatsonDumpEnablement(ID3D12Debug *iface, int value)
+{
+    WARN("ID3D12DeviceRemovedExtendedDataSettings::SetWatsonDumpEnablement(%d) STUB!\n", value);
+}
+
+static CONST_VTBL struct ID3D12DeviceRemovedExtendedDataSettingsVtbl d3d12_device_removed_extended_data_settings_vtbl =
+{
+        /* IUnknown methods */
+        d3d12_device_removed_extended_data_settings_QueryInterface,
+        d3d12_device_removed_extended_data_settings_AddRef,
+        d3d12_device_removed_extended_data_settings_Release,
+        /* ID3D12DeviceRemovedExtendedDataSettings methods */
+        d3d12_device_removed_extended_data_settings_SetAutoBreadcrumbsEnablement,
+        d3d12_device_removed_extended_data_settings_SetPageFaultEnablement,
+        d3d12_device_removed_extended_data_settings_SetWatsonDumpEnablement
+};
+
+/* HACK: This is very obviously completely and utterly wrong. */
+static ID3D12DeviceRemovedExtendedDataSettingsVtbl* fake_device_removed_extended_data_settings_object =
+    &d3d12_device_removed_extended_data_settings_vtbl;
+
 HRESULT STDMETHODCALLTYPE d3d12core_GetDebugInterface(d3d12core_interface *core,
         REFIID iid, void** debug)
 {
     TRACE("iid %s, debug %p.\n", debugstr_guid(iid), debug);
 
+    if (IsEqualGUID(iid, &IID_ID3D12DeviceRemovedExtendedDataSettings))
+    {
+        *debug = (void*)&fake_device_removed_extended_data_settings_object;
+        return S_OK;
+    }
+
     WARN("Returning DXGI_ERROR_SDK_COMPONENT_MISSING.\n");
     return DXGI_ERROR_SDK_COMPONENT_MISSING;
 }
-- 
2.39.1

